openapi: 3.0.0
info:
  title: Sandbox API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1
    description: Optional server description, e.g. Development server for testing and development

paths:
  /users:
    get:
      summary: Returns a list of users.
      tags:
        - User and Resource
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - $ref: '#/components/parameters/language-code'
      responses:
        '200':
          description: A JSON array of user objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserArray'
        '400':
          description: A JSON array of user objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUserArray'
      
    post:
      summary: Creates a new user.
      tags:
        - User and Resource
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - $ref: '#/components/parameters/language-code'
      security:
        - ApiKeyAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: A JSON with the users attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUser'
      
  /users/{user_code}:
    get:
      summary: Returns the details of the user.
      tags:
        - User and Resource
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - $ref: '#/components/parameters/language-code'
        - $ref: '#/components/parameters/user_code'
      responses:
        '200':
          description: A JSON with the users attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUser'
      
    patch:
      summary: Returns a list of users.
      tags:
        - User and Resource
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - $ref: '#/components/parameters/language-code'
        - $ref: '#/components/parameters/user_code'
      security:
        - ApiKeyAuth: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
            examples:
              Jessica:
                value:
                  id: 10
                  name: Jessica Smith
              Ron:
                value:
                  id: 11
                  name: Ron Stewart
      responses:
        '200':
          description: A JSON with the users attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUser'
      
    delete:
      summary: Returns a list of users.
      tags:
        - User and Resource
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - $ref: '#/components/parameters/user_code'
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: A JSON array of user objects
      
tags:
  - name: User and Resource
    description: Enpoints to interact with resources and users

components:
  parameters:
    user_code:
      name: user_code
      in: path
      description: User Code
      required: true
      schema:
        type: string
        example: username
    language-code:
      name: language-code
      in: header
      description: Translation fields language code
      required: true
      schema:
        type: string
        example: pt-br
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authentication
  schemas:
    Resource:
      type: object
      properties:
        language-code:
          type: string
        role:
          type: string
        department:
          type: string
    ResourceUpdate:
      type: object
      properties:
        language-code:
          type: string
        role:
          type: string
        department:
          type: string
    ResourceCreate:
      type: object
      properties:
        language-code:
          type: string
        role:
          type: string
        department:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        resource:
          $ref: '#/components/schemas/Resource'
        created_date:
          type: string
      required:
        - code
        - name
    UserUpdate:
      type: object
      properties:
        name:
          type: string
        address:
          $ref: '#/components/schemas/AddressUpdate'
        resource:
          $ref: '#/components/schemas/ResourceUpdate'
    UserCreate:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/AddressCreate'
        resource:
          $ref: '#/components/schemas/ResourceCreate'
      required:
        - code
        - name
    Address:
      type: object
      properties:
        street:
          type: string
        number:
          type: integer
        city:
          type: string
      required:
        - street
    AddressUpdate:
      type: object
      properties:
        street:
          type: string
        number:
          type: integer
        city:
          type: string
    AddressCreate:
      type: object
      properties:
        street:
          type: string
        number:
          type: integer
        city:
          type: string
      required:
        - street
    Metadata:
      type: object
      properties:
        filter:
          type: string
        order:
          type: string
        page:
          type: integer
    MetadataUpdate:
      type: object
      properties:
        filter:
          type: string
        order:
          type: string
        page:
          type: integer
    MetadataCreate:
      type: object
      properties:
        filter:
          type: string
        order:
          type: string
        page:
          type: integer
    ResponseUserArray:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        metadata:
          $ref: '#/components/schemas/Metadata'
        error:
          type: string
    ResponseUser:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
        metadata:
          $ref: '#/components/schemas/Metadata'
        error:
          type: string
